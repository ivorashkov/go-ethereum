name: CI-Deploy to Local Devnet

on:
  pull_request:
    types: [closed]
    branches: ["master"]

env:
  IMAGE: ivaylorashkov/go-ethereum
  OWNER: ivaylorashkov
  IMAGE_TAG: latest
  REGISTRY: docker.io

jobs:
  deploy-hardhat-ethereum:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CI:Deploy')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{  vars.DOCKERHUB_USERNAME }}  
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker image if exists
        run: |
          if docker pull ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.IMAGE_TAG }}; then
            echo "Image exists."
          else
            echo "Image does not exist, skipping pull."
          fi

      - name: Stop and remove old container if running
        run: |
          if [ "$(docker ps -q -f name=geth-devnet-go-ethereum)" ]; then
            docker stop geth-devnet-go-ethereum && docker rm geth-devnet-go-ethereum
          fi

      - name: Running image container
        run: |
          docker run -d --name geth-devnet-go-ethereum -p 8545:8545 -p 8546:8546 ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.IMAGE_TAG }} \
            --dev --http --http.addr 0.0.0.0 --http.port 8545 \
            --http.api personal,db,eth,net,web3 --dev.period 5

      - name: Copy hardhat files to container
        run: |
          docker exec geth-devnet-go-ethereum mkdir -p /git_repo/hardhat
          docker cp hardhat/. geth-devnet-go-ethereum:/git_repo/hardhat/
          docker exec geth-devnet-go-ethereum ls -l /git_repo/hardhat

      - name: Install Node.js and npm in container
        run: docker exec geth-devnet-go-ethereum apk add --no-cache nodejs npm

      - name: Install Hardhat dependencies
        run: docker exec geth-devnet-go-ethereum sh -c "cd /git_repo/hardhat && npm install"

      - name: Check Hardhat version
        run: docker exec geth-devnet-go-ethereum npx hardhat --version

      - name: Run Hardhat tests
        run: docker exec geth-devnet-go-ethereum sh -c "cd /git_repo/hardhat && npx hardhat test"

      - name: Build new Docker image
        run: |
          docker commit geth-devnet-go-ethereum go-eth-hardhat:latest
          docker tag go-eth-hardhat:latest ${{ env.REGISTRY }}/${{ env.OWNER }}/go-ethereum-hardhat:${{ env.IMAGE_TAG }}

      - name: Push new Docker image
        run: docker push ${{ env.REGISTRY }}/${{ env.OWNER }}/go-ethereum-hardhat:${{ env.IMAGE_TAG }}
